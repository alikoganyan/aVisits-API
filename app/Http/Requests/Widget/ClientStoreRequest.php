<?php

namespace App\Http\Requests\Widget;


use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Http\Exceptions\HttpResponseException;
use Illuminate\Contracts\Validation\Validator;

class ClientStoreRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'first_name' => 'required|string|max:255',
            'last_name' => 'string|max:255',
            'father_name' => 'string|max:255',
            'sex' => 'in:male,female',
            'birthday' => 'date_format:d-m-Y',
            'email' => 'required_without:phone|string|email|max:255|unique:clients',
            'phone' => 'required_without:email|string|max:255|unique:clients',
            'card_number' => 'numeric|digits_between:12,12',
            'card_number_optional' => 'numeric|digits_between:12,12',
            'comment'=>'string',
            /*'deposit'=>'numeric|between:0,99999999.99',
            'bonuses'=>'numeric|between:0,99999999.99',
            'invoice_sum'=>'numeric|between:0,99999999.99'*/
        ];
    }
    /**
     * @return array
     */
    public function messages()
    {
        return parent::messages(); // TODO: Change the autogenerated stub
    }

    public function failedValidation(Validator $validator)
    {
        throw new HttpResponseException(response()->json(['ValidationError' => $validator->messages()],422));
    }
}
